name: Build and Deploy MkDocs Documentation

on:
  push:
    branches: [ "main" ]
    paths:
      - 'manifests/mkdocs-docs/**'
      - 'docs/**'
      - '.github/workflows/mkdocs-build.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'manifests/mkdocs-docs/**'
      - 'docs/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cyberdine-skynet/skynet-platform-docs

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ./manifests/mkdocs-docs
        file: ./manifests/mkdocs-docs/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  update-manifest:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update image tag in deployment
      run: |
        # Extract the SHA-based tag
        NEW_TAG=$(echo "${{ needs.build.outputs.image-tag }}" | grep -E "main-[a-f0-9]{7}" | head -1)
        if [ -z "$NEW_TAG" ]; then
          NEW_TAG=$(echo "${{ needs.build.outputs.image-tag }}" | head -1)
        fi

        echo "Updating deployment with image: $NEW_TAG"

        # Update the deployment.yaml file
        sed -i "s|image: ghcr.io/cyberdine-skynet/skynet-platform-docs:.*|image: $NEW_TAG|g" manifests/mkdocs-docs/deployment.yaml

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        if git diff --quiet; then
          echo "No changes to commit"
          exit 0
        fi

        git add manifests/mkdocs-docs/deployment.yaml
        git commit -m "chore: update mkdocs image tag

        Co-authored-by: francesco2323 <francesco2323@users.noreply.github.com>"
        git push
