# Traefik Helm Values
# Configuration for the Traefik ingress controller in the Skynet platform

# Image configuration
image:
  registry: docker.io
  repository: traefik
  pullPolicy: IfNotPresent
# Deployment
deployment:
  enabled: true
  kind: Deployment
  replicas: 2
  # Pod disruption budget
  podDisruptionBudget:
    enabled: true
    maxUnavailable: 1
# Service configuration
service:
  enabled: true
  single: true
  type: LoadBalancer
  # For NodePort instead of LoadBalancer, uncomment:
  # type: NodePort
  annotations: {}
  spec:
    externalTrafficPolicy: Cluster
# Ports
ports:
  web:
    port: 80
    exposedPort: 80
    protocol: TCP
  websecure:
    port: 443
    exposedPort: 443
    protocol: TCP
    tls:
      enabled: true
  traefik:
    port: 9000
    exposedPort: 9000
    protocol: TCP
# TLS Options
tlsOptions:
  default:
    sslProtocols:
      - TLSv1.2
      - TLSv1.3
    cipherSuites:
      - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
      - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
      - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
# Logs
logs:
  general:
    format: json
    level: INFO
  access:
    enabled: true
    format: json
    filters: {}
# Metrics
metrics:
  prometheus:
    enabled: true
    addEntryPointsLabels: true
    addServicesLabels: true
    buckets:
      - 0.1
      - 0.3
      - 1.2
      - 5.0
# Global arguments
globalArguments:
  - "--global.checknewversion=false"
  - "--global.sendanonymoususage=false"
# Additional arguments
additionalArguments:
  - "--serversTransport.insecureSkipVerify=true"
  - "--log.level=INFO"
  - "--accesslog=true"
  - "--entrypoints.web.address=:80"
  - "--entrypoints.websecure.address=:443"
  - "--api.dashboard=true"
  - "--ping=true"
# Environment variables
env:
  - name: POD_NAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: POD_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
# Providers
providers:
  kubernetesCRD:
    enabled: true
    allowCrossNamespace: true
    allowExternalNameServices: true
  kubernetesIngress:
    enabled: true
    allowExternalNameServices: true
    publishedService:
      enabled: true
# RBAC
rbac:
  enabled: true
# Service Account
serviceAccount:
  create: true
# Resources
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 1000m
    memory: 1Gi
# Security Context
securityContext:
  capabilities:
    drop: [ALL]
    add: [NET_BIND_SERVICE]
  readOnlyRootFilesystem: true
  runAsGroup: 65532
  runAsNonRoot: true
  runAsUser: 65532
podSecurityContext:
  fsGroup: 65532
# Persistence for ACME
persistence:
  enabled: true
  name: data
  accessMode: ReadWriteOnce
  size: 128Mi
  storageClass: "local-path"
  path: /data
  annotations: {}
# Affinity
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - traefik
          topologyKey: kubernetes.io/hostname
# Node selector
nodeSelector: {}
# Tolerations
tolerations: []
# Priority class
priorityClassName: ""
# Pod labels
podLabels: {}
# Pod annotations
podAnnotations: {}
# Hub configuration for enterprise features (if needed)
hub:
  enabled: false
