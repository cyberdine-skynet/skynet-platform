{
  "version": 4,
  "terraform_version": "1.8.4",
  "serial": 50,
  "lineage": "47592107-a6b8-21c5-2f93-d44c5b788ecb",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.10.7",
                "chart": "argo-cd",
                "first_deployed": 1752716736,
                "last_deployed": 1752716736,
                "name": "argocd",
                "namespace": "argocd",
                "notes": "In order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
                "revision": 1,
                "values": "{\"applicationSet\":{\"enabled\":true,\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"64Mi\"}}},\"configs\":{\"cm\":{\"create\":true},\"params\":{\"controller.diff.server.side\":true,\"server.grpc.web\":true,\"server.insecure\":false},\"rbac\":{\"create\":true},\"secret\":{\"createSecret\":true}},\"controller\":{\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"256Mi\"}}},\"dex\":{\"enabled\":true,\"resources\":{\"limits\":{\"cpu\":\"50m\",\"memory\":\"64Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"32Mi\"}}},\"global\":{\"domain\":\"argocd.fle.api64.de\"},\"metrics\":{\"enabled\":true,\"service\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"8082\",\"prometheus.io/scrape\":\"true\"}}},\"redis\":{\"enabled\":true,\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"64Mi\"}}},\"repoServer\":{\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"}}},\"server\":{\"extraArgs\":[\"--insecure=false\"],\"ingress\":{\"annotations\":{\"cert-manager.io/cluster-issuer\":\"letsencrypt-prod\",\"traefik.ingress.kubernetes.io/router.tls\":\"true\"},\"enabled\":true,\"hosts\":[\"argocd.fle.api64.de\"],\"ingressClassName\":\"traefik\",\"tls\":[{\"hosts\":[\"argocd.fle.api64.de\"],\"secretName\":\"argocd-server-tls\"}]},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsGroup\":999,\"runAsNonRoot\":true,\"runAsUser\":999},\"service\":{\"nodePortHttp\":30180,\"nodePortHttps\":30543,\"type\":\"NodePort\"}}}",
                "version": "6.7.12"
              }
            ],
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# Argo CD Helm values for Terraform deployment on Talos\n# Optimized for skynetcluster (talos-5kn-42d) at 192.168.1.175\n\nglobal:\n  domain: argocd.fle.api64.de\nserver:\n  service:\n    type: NodePort\n    nodePortHttp: 30180\n    nodePortHttps: 30543\n  extraArgs:\n    - --insecure=false\n  ingress:\n    enabled: true\n    ingressClassName: traefik\n    annotations:\n      cert-manager.io/cluster-issuer: letsencrypt-prod\n      traefik.ingress.kubernetes.io/router.tls: \"true\"\n    hosts:\n      - argocd.fle.api64.de\n    tls:\n      - secretName: argocd-server-tls\n        hosts:\n          - argocd.fle.api64.de\n  # Resources optimized for single Talos node\n  resources:\n    requests:\n      cpu: 100m\n      memory: 128Mi\n    limits:\n      cpu: 500m\n      memory: 512Mi\n  # Security context for Talos\n  securityContext:\n    allowPrivilegeEscalation: false\n    capabilities:\n      drop:\n        - ALL\n    readOnlyRootFilesystem: true\n    runAsNonRoot: true\n    runAsUser: 999\n    runAsGroup: 999\nrepoServer:\n  resources:\n    requests:\n      cpu: 100m\n      memory: 128Mi\n    limits:\n      cpu: 500m\n      memory: 512Mi\ncontroller:\n  resources:\n    requests:\n      cpu: 250m\n      memory: 256Mi\n    limits:\n      cpu: 1000m\n      memory: 1Gi\nredis:\n  enabled: true\n  resources:\n    requests:\n      cpu: 50m\n      memory: 64Mi\n    limits:\n      cpu: 200m\n      memory: 128Mi\ndex:\n  enabled: true\n  resources:\n    requests:\n      cpu: 10m\n      memory: 32Mi\n    limits:\n      cpu: 50m\n      memory: 64Mi\nconfigs:\n  params:\n    server.insecure: false\n    controller.diff.server.side: true\n    server.grpc.web: true\n  # Let Helm create the configmaps and secrets initially\n  secret:\n    createSecret: true\n  cm:\n    create: true\n  rbac:\n    create: true\napplicationSet:\n  enabled: true\n  resources:\n    requests:\n      cpu: 50m\n      memory: 64Mi\n    limits:\n      cpu: 200m\n      memory: 128Mi\nmetrics:\n  enabled: true\n  service:\n    annotations:\n      prometheus.io/scrape: \"true\"\n      prometheus.io/port: \"8082\"\n      prometheus.io/path: \"/metrics\"\n"
            ],
            "verify": false,
            "version": "6.7.12",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "values"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.argocd"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "argocd",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "argocd",
                  "app.kubernetes.io/part-of": "skynet-platform"
                },
                "name": "argocd",
                "resource_version": "1253469",
                "uid": "21957765-93f7-47b8-a58f-39ec5d26ded6"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.secrets",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "argocd_cm",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "admin.enabled": "true",
              "application.instanceLabelKey": "argocd.argoproj.io/instance",
              "dex.config": "\"connectors\":\n- \"config\":\n    \"clientID\": \"dummy\"\n    \"clientSecret\": \"dummy\"\n    \"loadAllGroups\": false\n    \"orgs\":\n    - \"name\": \"cyberdine-skynet\"\n      \"teams\":\n      - \"admin\"\n      - \"maintainers\"\n      - \"developers\"\n    \"teamNameField\": \"slug\"\n    \"useLoginAsID\": false\n  \"id\": \"github\"\n  \"name\": \"GitHub\"\n  \"type\": \"github\"\n",
              "exec.enabled": "false",
              "oidc.config": "\"clientId\": \"argo-cd\"\n\"clientSecret\": \"$oidc.github.clientSecret\"\n\"issuer\": \"https://argocd.fle.api64.de/api/dex\"\n\"name\": \"GitHub\"\n\"requestedIDTokenClaims\":\n  \"groups\":\n    \"essential\": true\n\"requestedScopes\":\n- \"openid\"\n- \"profile\"\n- \"email\"\n- \"groups\"\n",
              "server.rbac.log.enforce.enable": "true",
              "timeout.hard.reconciliation": "0",
              "timeout.reconciliation": "180s",
              "url": "https://argocd.fle.api64.de"
            },
            "id": "argocd/argocd-cm",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "argocd-cm",
                "namespace": "argocd",
                "resource_version": "1253233",
                "uid": "65d7d3a6-20e7-4ebe-bc2f-66e84e9dcef3"
              }
            ]
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "data"
              },
              {
                "type": "index",
                "value": {
                  "value": "dex.config",
                  "type": "string"
                }
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.argocd"
          ]
        }
      ]
    },
    {
      "module": "module.secrets",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "argocd_rbac_cm",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "policy.csv": "g, cyberdine-skynet:admin, role:admin\ng, cyberdine-skynet:maintainers, role:admin\ng, cyberdine-skynet:developers, role:developer\n# Custom role definitions\np, role:developer, applications, get, */*, allow\np, role:developer, applications, sync, */*, allow\np, role:developer, applications, action/*, */*, allow\np, role:developer, repositories, get, *, allow\np, role:developer, logs, get, */*, allow\np, role:developer, exec, create, */*, allow\n\np, role:maintainer, applications, *, */*, allow\np, role:maintainer, repositories, *, *, allow\np, role:maintainer, clusters, get, *, allow\np, role:maintainer, projects, get, *, allow\np, role:maintainer, logs, get, */*, allow\np, role:maintainer, exec, create, */*, allow\n\n# Admin role (has all permissions)\np, role:admin, *, *, *, allow",
              "policy.default": "role:readonly",
              "scopes": "[groups]"
            },
            "id": "argocd/argocd-rbac-cm",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "argocd-rbac-cm",
                "namespace": "argocd",
                "resource_version": "1253234",
                "uid": "98573ea4-0a6b-405d-97ef-f1bd30c9fc01"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.argocd"
          ]
        }
      ]
    },
    {
      "module": "module.secrets",
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "argocd_secret",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "binary_data_wo": null,
            "binary_data_wo_revision": null,
            "data": {
              "admin.password": "$2a$10$rRyBsGSHK6.uc8fntPwVIuLVHgsAhAX7TcdrqW/RADU0uh7CaChLa",
              "admin.passwordMtime": "2025-07-16T00:00:00Z",
              "dex.github.clientSecret": "dummy",
              "oidc.github.clientSecret": "dummy",
              "server.secretkey": "OEV0ZylSbCMwTFArYjVlY0YmQFNIOHNpUTRvIUMoeUk="
            },
            "data_wo": null,
            "data_wo_revision": null,
            "id": "argocd/argocd-secret",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "argocd-secret",
                "namespace": "argocd",
                "resource_version": "1253236",
                "uid": "2ba4e165-0b99-44ab-8a29-f2e668a83e03"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              },
              {
                "type": "index",
                "value": {
                  "value": "dex.github.clientSecret",
                  "type": "string"
                }
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              },
              {
                "type": "index",
                "value": {
                  "value": "oidc.github.clientSecret",
                  "type": "string"
                }
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              },
              {
                "type": "index",
                "value": {
                  "value": "server.secretkey",
                  "type": "string"
                }
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "kubernetes_namespace.argocd",
            "module.secrets.random_password.server_secret"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
